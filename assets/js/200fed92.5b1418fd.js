"use strict";(self.webpackChunkinterview_guide=self.webpackChunkinterview_guide||[]).push([[406],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),d=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=d(r),u=n,k=s["".concat(c,".").concat(u)]||s[u]||p[u]||i;return r?a.createElement(k,l(l({ref:t},m),{},{components:r})):a.createElement(k,l({ref:t},m))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=s;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var d=2;d<i;d++)l[d]=r[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},84:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_position:3},l="Dockerfile",o={unversionedId:"docker/dockerfile",id:"docker/dockerfile",title:"Dockerfile",description:"Dockerfile represents the list of steps to create a Docker image. The file should be created with name Dockerfile without any extension. Dockerfile help us avoid building Docker image with Docker commands",source:"@site/docs/docker/dockerfile.mdx",sourceDirName:"docker",slug:"/docker/dockerfile",permalink:"/docker/dockerfile",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Docker Basics",permalink:"/docker/docker-basics"},next:{title:"docker-compose.yaml",permalink:"/docker/docker-compose"}},c={},d=[{value:"Building Tomcat Image",id:"building-tomcat-image",level:2},{value:"Dockerfile",id:"dockerfile-1",level:3},{value:"Building image from Dockerfile",id:"building-image-from-dockerfile",level:3},{value:"Verify image creation",id:"verify-image-creation",level:3},{value:"Understanding Dockerfile",id:"understanding-dockerfile",level:3},{value:"More Dockerfile samples",id:"more-dockerfile-samples",level:2},{value:"Alpine Linux Distribution + Java",id:"alpine-linux-distribution--java",level:3},{value:"Tomcat",id:"tomcat",level:3},{value:"Alpine + Java",id:"alpine--java",level:3}],m={toc:d};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"dockerfile"},"Dockerfile"),(0,n.kt)("p",null,"Dockerfile represents the list of steps to create a Docker image. The file should be created with name ",(0,n.kt)("strong",{parentName:"p"},"Dockerfile")," without any extension. Dockerfile help us avoid building Docker image with Docker commands"),(0,n.kt)("h2",{id:"building-tomcat-image"},"Building Tomcat Image"),(0,n.kt)("h3",{id:"dockerfile-1"},"Dockerfile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'FROM tomcat:8.5.21-jre8-alpine\nCOPY target/Sample.war /usr/local/tomcat/webapps\nENTRYPOINT ["catalina.sh", "start"]\n')),(0,n.kt)("h3",{id:"building-image-from-dockerfile"},"Building image from Dockerfile"),(0,n.kt)("p",null,"Docker build command is used for creating image from Dockerfile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"> docker build -t my-img .\n")),(0,n.kt)("p",null,"Here ",(0,n.kt)("inlineCode",{parentName:"p"},"-t")," is for tagging a name to the image which in this case ",(0,n.kt)("strong",{parentName:"p"},"my-img"),". There is a .(dot) at end of ",(0,n.kt)("inlineCode",{parentName:"p"},"docker build")," command to tell build command that Dockerfile is in current directory"),(0,n.kt)("h3",{id:"verify-image-creation"},"Verify image creation"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Use ",(0,n.kt)("inlineCode",{parentName:"li"},"docker images")," command to check whether my-img got created successfully")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"> docker images\n")),(0,n.kt)("h3",{id:"understanding-dockerfile"},"Understanding Dockerfile"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"FROM"),(0,n.kt)("th",{parentName:"tr",align:null},"Represents the base image to start with our image building"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"COPY"),(0,n.kt)("td",{parentName:"tr",align:null},"COPY from source path (host system) to a path inside container")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ADD"),(0,n.kt)("td",{parentName:"tr",align:null},"ADD is similar to COPY except that ADD can also download files from URL and copy it to a path inside container")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"RUN"),(0,n.kt)("td",{parentName:"tr",align:null},"Command to be executed while building the Docker image. Usually used for installing Software packages")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"CMD"),(0,n.kt)("td",{parentName:"tr",align:null},"Default command to be executed while starting the Docker container. If there are multiple CMD commands, the last CMD will be considered")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ENTRYPOINT"),(0,n.kt)("td",{parentName:"tr",align:null},"To make our Docker image an Executable one")))),(0,n.kt)("h2",{id:"more-dockerfile-samples"},"More Dockerfile samples"),(0,n.kt)("h3",{id:"alpine-linux-distribution--java"},"Alpine Linux Distribution + Java"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'FROM alpine:3.11\nRUN apk add openjdk11\nCMD ["/usr/bin/java", "-version"]\n')),(0,n.kt)("h3",{id:"tomcat"},"Tomcat"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'FROM tomcat:latest\nCOPY target/demo.war /usr/local/tomcat/webapps/\nCMD ["catalina.sh", "run"]\n')),(0,n.kt)("h3",{id:"alpine--java"},"Alpine + Java"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'FROM alpine:3.11\nRUN apk add openjdk11\nCOPY target/H2Sample.jar H2Sample.jar\nCMD ["/usr/bin/java", "-jar", "H2Sample.jar"]\n')),(0,n.kt)("p",null,"Ok. What if we need to create & run multiple Docker containers at a same time ? If we have multiple containers, how the inter container communication takes place ? The answer is the ",(0,n.kt)("strong",{parentName:"p"},"docker-compose.yaml")," file"))}p.isMDXComponent=!0}}]);